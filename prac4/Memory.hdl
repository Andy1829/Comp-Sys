// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    // 0x0000 -> 0x3FFF = 0000 0000 0000 0000 -> 0011 1111 1111 1111        RAM
    // 0x4000 -> 0x5FFF = 0100 0000 0000 0000 -> 0101 1111 1111 1111        Screen
    // 0x6000 =                                  0110 0000 0000 0000        Keyboard

    PARTS:
    // Selects which function to operate
    // Only operates IF load is asserted, otherwise does nothing

    DMux4Way(in = load, sel = address[13..14], a = RAMout1, b = RAMout2, c = scrnOut, d = kbrdOut);
    Or(a = RAMout1, b = RAMout2, out = RAMout);                         // Combines the possibilities of 00 and 01
                                                                    // Is required for single input buses  

    RAM16K(in = in, load = RAMout, address = address[0..13], out = RAMoutTrue);    
    Screen(in = in, load = scrnOut, address = address[0..12], out = scrnOutTrue);

    And (a = address[13], b = address[14], out = kbrdOutTrue);           // Previous kbrdOut doesn't appear to have a use

    Keyboard(out = kbd);

    Mux4Way16(a = RAMoutTrue, b = RAMoutTrue, c = scrnOutTrue, d = kbd, sel = address[13..14], out = out);

}