// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    
    // Depending on which address is loaded, a different memory address will be called
    // IMPORTANTLY, IT IS ALSO DEPENDENT ON WHETHER LOAD IS ACTIVE, SINCE WE EITHER REQUIRE
    // THE REGISTERS TO LOAD THE VALUE OR TO JUST DISPLAY. THIS FUNCTIONALITY IS ALREADY
    // CAPTURED BY REGISTERS THEMSELVES -- THEY WILL OUTPUT THE CORRECT THING DEPENDENT 
    // ON THEIR LOAD STATUS !!!

    DMux8Way(in = load, sel = address, a = a, b = b, c = c, d = d, e = e, 
f = f, g = g, h = h);

    Register(in = in, load = a, out = outA);
    Register(in = in, load = b, out = outB);
    Register(in = in, load = c, out = outC);
    Register(in = in, load = d, out = outD);

    Register(in = in, load = e, out = outE);
    Register(in = in, load = f, out = outF);
    Register(in = in, load = g, out = outG);
    Register(in = in, load = h, out = outH);

    // Selects which register is being displayed; dependent on selected address
    Mux8Way16(a = outA, b = outB, c = outC, d = outD, e = outE, f = outF,
    g = outG, h = outH, sel = address, out = out);


/*

    DMux8Way(in = true, sel = address, a = a, b = b, c = c, d = d, e = e, 
f = f, g = g, h = h);



    // Depending on LOAD's state, set the value at ADDRESS to be IN
    Register(in = in, load = a, out = outA);
    Register(in = in, load = b, out = outB);
    Register(in = in, load = c, out = outC);
    Register(in = in, load = d, out = outD);

    Register(in = in, load = e, out = outE);
    Register(in = in, load = f, out = outF);
    Register(in = in, load = g, out = outG);
    Register(in = in, load = h, out = outH);

    // Output value at selected address
    Mux8Way16(a = outA, b = outB, c = outC, d = outD, e = outE, f = outF,
    g = outG, h = outH, sel = address, out = out);


*/
}